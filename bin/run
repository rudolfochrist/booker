#!/bin/bash

# see https://github.com/adriancooney/Taskfile

env="${APP_ENV:-development}"

if [[ -e "config/${env}.env" ]]
then
    . "config/${env}.env"
else
    echo "Please add a configuration file: config/${env}.env"
    exit 1
fi

function db:create() {
    dbmate --url "${DATABASE_URL}" create
}

function db:drop() {
    dbmate --url "${DATABASE_URL}" drop
}

function db:migrate() {
    dbmate --url "${DATABASE_URL}" up
}

function db:status() {
    dbmate --url "${DATABASE_URL}" status
}

function db:load() {
    dbmate --url "${DATABASE_URL}" load
}

function start() {
    sbcl --no-userinit --load init.lisp
}

function tests() {
    sbcl --non-interactive --no-userinit --load init.lisp \
         --eval '(asdf:test-system "booker")'
}

function dbconsole() {
    psql -U "${DB_USERNAME}" "${DB_DATABASE}"
}

function clean() {
    find "$PWD" -name "*.fasl" -delete
}

function deps:install() {
    name="$(basename "$PWD")"
    system_name="${1:-$name}"
    echo "Installing systems."
    ocicl install

    echo "Preloading systems."
    sbcl --non-interactive --no-userinit \
         --load init.lisp \
         --eval "(asdf:load-system \"${system_name}\" :force t)" \
         --eval '(uiop:quit)'
}

function deps:clear() {
    rm -rf systems/
}

function help() {
    compgen -A function | sort -n | cat -n
}

function default() {
    start
}

TIMEFORMAT="Task completed in %3lR"
time "${@:-default}"
