# -*- mode: org; -*-

* NAME

sefil --- SEcure FILes

* DESCRIPTION

=sefil= is a command line tool and a Common Lisp library to encrypt and decrypt files.

* INSTALLATION

** CLI

#+begin_src sh :eval no
$ ./make.sh
#+end_src

Move the =sefil= binary to a directory in your =$PATH=.

** LIBRARY

Clone the code somewhere ASDF can find it and then load it:

#+begin_src lisp :eval no
(asdf:load-system "sefil")
#+end_src

* USAGE

** CLI

Running =sefil --help= should be self-explanatory:

#+begin_src sh :results output :exports results
./sefil --help
#+end_src

#+RESULTS:
#+begin_example
NAME:
  sefil - SEcure FILes

USAGE:
  sefil [global-options] [<command>] [command-options] [arguments ...]

OPTIONS:
      --help             display usage information and exit
      --key-file <PATH>  use key file
      --version          display version and exit
  -k, --key <VALUE>      secret key [env: $SEFIL_MASTER_KEY]

COMMANDS:
  keygen  Generate a new key.
  show    Decrypt file and show its content.
  edit    Edit an encrypted file.

AUTHORS:
  Sebastian Christ <rudolfo.christ@proton.me>

LICENSE:
  MPL-2.0

#+end_example


** LIBRARY

#+begin_src sh :results output :exports results
makeinfo --plaintext doc/sefil.texi
#+end_src

#+RESULTS:
#+begin_example
Introduction
1 Package SEFIL

Introduction
,************

This is an SB-TEXINFO autogenerated manual for sefil.

1 Package SEFIL
,***************

sefil base package.
 -- Variable: *key-path*
     Pathname to the key file to use.  Defaults to $PWD/master.key

 -- Function: add-key-file &key path key
     Add a keyfile

 -- Function: create-empty-encrypted-file path &optional key
     Create an empty encrypted file at ‘path’.

 -- Function: decrypt data &optional secret
     Decrypt ‘data’.

 -- Function: decrypt-file path &key secret output
     Decrypt file at ‘path’.

 -- Function: encrypt data &optional secret
     Encrypt ‘data’.

 -- Function: encrypt-file path &key secret output
     Encrypt file at ‘path’.

 -- Function: generate-key
     AES-128 ‘->’ key length 16 bytes

 -- Function: key &optional keyfile-path
     Retrive the encryption/decryption key.

     The key found in the SEFIL_MASTER_KEY environment variable takes
     precedence if set.

 -- Function: read-key-file pathname
     Read the key file from ‘pathname’.

#+end_example

* AUTHOR

Sebastian Christ ([[mailto:rudolfo.christ@proton.me]])

* COPYRIGHT

Copyright (c) 2025 Sebastian Christ (rudolfo.christ@proton.me)

* LICENSE

Released under the MPL-2.0 license.
See [[file:LICENSE.txt][LICENSE]].

* SEE ALSO

- [[https://guides.rubyonrails.org/security.html#custom-credentials][Rails Guides - Custom Credentials]]
